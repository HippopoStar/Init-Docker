#!/bin/sh
#04.	Realiser un script qui permet de surveiller les modifications du fichier
#		/etc/crontab et envoie un mail a root si celui-ci a ete modifie. Creez
#		une tache planifiee pour ce script tous les jours a minuit

#Note :
#	'awk' est capricieux losqu'il est question de lui transmettre une
#	variable shell contenant des WildCards en argument et de les evaluer
#	en tant qu'expression reguliere en cherchant une correspondance de pattern

USER="`{ cd ~/ ; pwd | awk -F \"/\" '{ print $NF }' ; }`"
TO_CHECK=/etc/crontab
SCRIPT_FILE=~/`basename ${0}`
CRONTAB_LINE="0 0 * * * ${SCRIPT_FILE} LAUNCH"
CRONTAB_WITNESS="${SCRIPT_FILE} LAUNCH"
CRONTAB_TEMPORARY_FILE=/tmp/crontab.tmp
CHKSUM_FILE=~/crontab_`basename ${0}`.chksum

usage () {
	echo "usage: ${0} [LAUNCH]"
}

if test ${#} -gt 1 || ( test ${#} -eq 1 && test "x${1}" != 'xLAUNCH' ) ; then
	usage
elif test ! -e ${TO_CHECK} ; then
	echo "Le fichier specifie '${TO_CHECK}' n'existe pas !"
elif test ${#} -eq 0 ; then
	if test ! -e ${SCRIPT_FILE} ; then
		cp ${0} ~/
		echo "Script duplique a l'emplacement '${SCRIPT_FILE}'"
	fi
	if test "x`crontab -l | awk -v pat=\"${CRONTAB_WITNESS}\" '$0 ~ pat { print $0 }' | awk 'END { print $0 }'`" = "x${CRONTAB_LINE}" ; then
		echo 'Tache deja presente dans la crontab'
	else
		rm -f ${CRONTAB_TEMPORARY_FILE}
		crontab -l > ${CRONTAB_TEMPORARY_FILE}
		echo "${CRONTAB_LINE}" >> ${CRONTAB_TEMPORARY_FILE}
		crontab ${CRONTAB_TEMPORARY_FILE}
		echo 'Tache ajoutee a la crontab'
		rm -f ${CRONTAB_TEMPORARY_FILE}
		md5sum ${TO_CHECK} | awk '{ print $1 }' > ${CHKSUM_FILE}
		echo "CheckSum effectue et enregistre a l'emplacement '${CHKSUM_FILE}'"
	fi
else
	OLD_CHKSUM=`cat ${CHKSUM_FILE}`
	NEW_CHKSUM=`md5sum ${TO_CHECK} | awk '{ print $1 }'`
	if test "x${NEW_CHKSUM}" != "x${OLD_CHKSUM}" ; then
		echo "`{ date ; echo '' ; cat ${TO_CHECK} ; }`" | mail -s "Crontab_Report - Le fichier '${TO_CHECK}' a recemment ete altere" "${USER}@localhost"
		echo "${NEW_CHKSUM}" > ${CHKSUM_FILE}
	fi
fi
